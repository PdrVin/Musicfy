@using Application.DTOs
@using Domain.Entities
@using WebUI.ViewModels.Playlist

@model PlaylistListViewModel

@{
    ViewData["Title"] = "Playlists";
}

<div class="container mt-4 mx-auto">

    @if (TempData["MessageSuccess"] != null)
    {
        <div class="alert alert-success" role="alert">
            @TempData["MessageSuccess"]
            <button type="button" class="btn btn-danger btn-md close-alert" arial-label="Close">
                <i class="bi bi-x-lg"></i></button>
        </div>
    }

    @if (TempData["MessageError"] != null)
    {
        <div class="alert alert-danger" role="alert">
            @TempData["MessageError"]
            <button type="button" class="btn btn-danger btn-md close-alert" arial-label="Close">
                <i class="bi bi-x-lg"></i></button>
        </div>
    }

    <div class="mb-4">
        <h2>Gerenciamento de Playlists</h2>
    </div>

    <div class="card bg-body border-success">
        <div class="card-body p-3">

            <div class="d-none d-md-flex justify-content-between align-items-center mb-3">
                <h6 class="mb-0 text-white">Todos as Playlists ( @Model.TotalItems )</h6>
                <div class="d-flex align-items-center">

                    <div class="input-group me-2" style="width: 300px;">
                        <input type="text" class="form-control bg-body text-white"
                            placeholder="Pesquisar" value="@Model.SearchTerm" id="searchTerm">
                        <span class="input-group-text btn-dark btn-outline-light">
                            <i class="bi bi-search white"></i></span>
                    </div>

                    <button class="btn btn-outline-light me-2 px-4"
                        style="height: 40px;" onclick="applyFilter()">
                        <i class="bi bi-funnel"></i> Filtros
                    </button>

                    <a asp-action="Create" class="btn btn-dark btn-outline-primary px-4"
                        style="height: 40px;">
                        <i class="bi bi-plus-lg"></i> Adicionar Playlist</a>

                    <button id="deleteSelectedBtn" class="btn btn-outline-danger ms-2 px-4"
                        style="height: 40px; display: none;" onclick="deleteSelected()">
                        <i class="bi bi-trash"></i> Excluir Selecionadas
                    </button>
                </div>
            </div>

            <table class="table table-borderless align-middle mb-0 text-light" id="table-artist">
                <thead style="background-color: #343a40; border-radius: 10px 10px 0 0;">
                    <tr>
                        <th scope="col" style="width: 2%; border-top-left-radius: 10px;">
                            <input type="checkbox" id="selectAll">
                        </th>
                        <th scope="col" style="width: 30%;">Nome</th>
                        <th scope="col" class="d-none d-md-table-cell">Músicas</th>
                        <th scope="col" style="width: 12%; border-top-right-radius: 10px;">Ações</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var playlist in Model.Playlists)
                    {
                        <tr class="align-middle table-row-click" 
                            style="border-bottom: 1px solid #E0E0E0; cursor: pointer;"
                            onclick="window.location.href=
                                '@Url.Action("Details", "Playlist", new { id = playlist.Id })'">
                            <td>
                                <input type="checkbox" class="selectActivity" name="ids" value="@playlist.Id">
                            </td>
                            <td><div class="fw-bold">@playlist.Name</div></td>
                            <td class="d-none d-md-table-cell">@(playlist.Musics?.Count() ?? 0)</td>
                            <td>
                                <div class="btn-group-sm" role="group">
                                    <a class="btn btn-success" role="button" title="Adicionar Música"
                                        asp-route-id="@playlist.Id" asp-controller="Playlist"
                                        asp-action="AddMusics" >
                                        <i class="bi bi-music-note-beamed"></i></a>
                                    <a role="button" class="btn btn-primary" title="Editar"
                                        asp-route-id="@playlist.Id" asp-controller="Playlist" asp-action="Edit">
                                        <i class="bi bi-pencil"></i></a>
                                    <a role="button" class="btn btn-danger" title="Deletar"
                                        asp-route-id="@playlist.Id" asp-controller="Playlist" asp-action="DeleteConfirm">
                                        <i class="bi bi-trash3"></i></a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

            <div class="d-flex justify-content-between align-items-center mt-3">
                <div>
                    <span class="text-muted">
                        Mostrando @((Model.PageNumber - 1) * Model.PageSize + 1) a @(Model.PageNumber * Model.PageSize) de @Model.TotalItems entradas
                    </span>
                </div>
                @if (Model.TotalItems > 10)
                {
                    <nav aria-label="Navegação de página">
                        <ul class="pagination mb-0">

                            @if (Model.PageNumber > 1)
                            {
                                <li class="page-item">
                                    <a class="page-link" aria-label="Anterior"
                                        href="@Url.Action("Index", new {
                                            pageNumber = Model.PageNumber - 1,
                                            pageSize = Model.PageSize,
                                            searchTerm = Model.SearchTerm })">
                                        <span aria-hidden="true">&laquo;</span>
                                    </a>
                                </li>
                            }

                            @for (var i = 1; i <= Model.TotalPages; i++)
                            {
                                <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                                    <a class="page-link"
                                        href="@Url.Action("Index", new { 
                                            pageNumber = i,
                                            pageSize = Model.PageSize,
                                            searchTerm = Model.SearchTerm })">@i</a>
                                </li>
                            }

                            @if (Model.PageNumber < Model.TotalPages)
                            {
                                <li class="page-item">
                                    <a class="page-link" aria-label="Próximo"
                                        href="@Url.Action("Index", new {
                                            pageNumber = Model.PageNumber + 1,
                                            pageSize = Model.PageSize,
                                            searchTerm = Model.SearchTerm })">
                                        <span aria-hidden="true">&raquo;</span>
                                    </a>
                                </li>
                            }
                        </ul>
                    </nav>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.getElementById('selectAll').addEventListener('change', function () {
            var checkboxes = document.querySelectorAll('.selectActivity');
            var selectAll = this.checked;
            checkboxes.forEach(function (checkbox) {
                checkbox.checked = selectAll;
            });
            toggleDeleteButton();
        });

        document.querySelectorAll('.selectActivity').forEach(function (checkbox) {
            checkbox.addEventListener('change', function () {
                toggleDeleteButton();
            });
        });

        function toggleDeleteButton() {
            var anyChecked = document.querySelectorAll('.selectActivity:checked').length > 0;
            var deleteButtons = document.querySelectorAll('#deleteSelectedBtn');

            deleteButtons.forEach(function (button) {
                button.style.display = anyChecked ? 'inline-block' : 'none';
            });
        }

        function deleteSelected() {
            var form = document.getElementById('deleteForm');
            form.submit();
        }

        function applyFilter() {
            var searchTerm = document.getElementById('searchTerm').value;
            var url = '@Url.Action("Index", new { pageNumber = 1, pageSize = Model.PageSize })';
            window.location.href = url + '&searchTerm=' + encodeURIComponent(searchTerm);
        }

        document.getElementById('searchTerm').addEventListener('keypress', function (e) {
            if (e.key === 'Enter') {
                applyFilter();
            }
        });
    </script>
}